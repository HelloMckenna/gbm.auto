gbm.step(data = grv_yes,
gbm.x = 4:10,
gbm.y = grvcol,
family = "gaussian",
tree.complexity = 2,
learning.rate = 0.000001,
bag.fraction = 0.5,
max.trees = 10000)
gbm.step(data = grv_yes,
gbm.x = 4:10,
gbm.y = grvcol,
family = "gaussian",
tree.complexity = 2,
learning.rate = 0.000001,
bag.fraction = 0.5,
max.trees = 10000)
gbm.step(data = grv_yes,
gbm.x = 4:10,
gbm.y = grvcol,
family = "gaussian",
tree.complexity = 2,
learning.rate = 0.000001,
bag.fraction = 0.5)
gbm.step(data = grv_yes,
gbm.x = 4:10,
gbm.y = grvcol,
family = "gaussian",
tree.complexity = 2,
learning.rate = 0.000001,
bag.fraction = 0.7)
gbm.step(data = grv_yes,
gbm.x = 4:10,
gbm.y = grvcol,
family = "gaussian",
tree.complexity = 2,
learning.rate = 0.000001,
bag.fraction = 0.7,
max.trees = 10000)
gbm.step(data = grv_yes,
gbm.x = 4:10,
gbm.y = grvcol,
family = "gaussian",
tree.complexity = 2,
learning.rate = 0.0000001,
bag.fraction = 0.7,
max.trees = 10000)
gbm.step(data = grv_yes,
gbm.x = 4:10,
gbm.y = grvcol,
family = "gaussian",
tree.complexity = 2,
learning.rate = 0.0000001,
bag.fraction = 0.5,
max.trees = 10000)
gbm.step(data = grv_yes,
gbm.x = 4:10,
gbm.y = grvcol,
family = "gaussian",
tree.complexity = 2,
learning.rate = 0.0000001,
bag.fraction = 0.8,
max.trees = 10000)
gbm.step(data = grv_yes,
gbm.x = 4:10,
gbm.y = grvcol,
family = "gaussian",
tree.complexity = 2,
learning.rate = 0.0000001,
bag.fraction = 0.8,
max.trees = 10000)
gbm.step(data = grv_yes,
gbm.x = 4:10,
gbm.y = grvcol,
family = "gaussian",
tree.complexity = 2,
learning.rate = 0.0000001,
bag.fraction = 0.8,
max.trees = 10000)
gbm.step(data = grv_yes,
gbm.x = 4:10,
gbm.y = grvcol,
family = "gaussian",
tree.complexity = 2,
learning.rate = 0.0000001,
bag.fraction = 0.8,
max.trees = 10000)
gbm.step(data = grv_yes,
gbm.x = 4:10,
gbm.y = grvcol,
family = "gaussian",
tree.complexity = 2,
learning.rate = 0.0000001,
bag.fraction = 0.7,
max.trees = 10000)
gbm.step(data = grv_yes,
gbm.x = 4:10,
gbm.y = grvcol,
family = "gaussian",
tree.complexity = 2,
learning.rate = 0.0000001,
bag.fraction = 0.7,
max.trees = 10000)
gbm.step(data = grv_yes,
gbm.x = 4:10,
gbm.y = grvcol,
family = "gaussian",
tree.complexity = 2,
learning.rate = 0.0000001,
bag.fraction = 0.7,
max.trees = 10000)
gbm.step(data = grv_yes,
gbm.x = 4:10,
gbm.y = grvcol,
family = "gaussian",
tree.complexity = 2,
learning.rate = 0.0000001,
bag.fraction = 0.7,
max.trees = 10000)
gbm.step(data = grv_yes,
gbm.x = 4:10,
gbm.y = grvcol,
family = "gaussian",
tree.complexity = 2,
learning.rate = 0.0000001,
bag.fraction = 0.7,
max.trees = 10000)
gbm.step(data = grv_yes,
gbm.x = 4:10,
gbm.y = grvcol,
family = "gaussian",
tree.complexity = 2,
learning.rate = 0.0000001,
bag.fraction = 0.7,
max.trees = 10000)
gbm.step(data = grv_yes,
gbm.x = 4:10,
gbm.y = grvcol,
family = "gaussian",
tree.complexity = 2,
learning.rate = 0.0000001,
bag.fraction = 0.7,
max.trees = 10000)
gbm.step(data = grv_yes,
gbm.x = 4:10,
gbm.y = grvcol,
family = "gaussian",
tree.complexity = 2,
learning.rate = 0.0000001,
bag.fraction = 0.7,
max.trees = 10000)
gbm.step(data = grv_yes,
gbm.x = 4:10,
gbm.y = grvcol,
family = "gaussian",
tree.complexity = 2,
learning.rate = 0.0000001,
bag.fraction = 0.7,
max.trees = 10000)
gbm.step(data = grv_yes,
gbm.x = 4:10,
gbm.y = grvcol,
family = "gaussian",
tree.complexity = 2,
learning.rate = 0.0000001,
bag.fraction = 0.7,
max.trees = 10000)
gbm.step(data = grv_yes,
gbm.x = 4:10,
gbm.y = grvcol,
family = "gaussian",
tree.complexity = 2,
learning.rate = 0.00000001,
bag.fraction = 0.7,
max.trees = 10000)
gbm.step(data = grv_yes,
gbm.x = 4:10,
gbm.y = grvcol,
family = "gaussian",
tree.complexity = 2,
learning.rate = 0.00000001,
bag.fraction = 0.7,
max.trees = 10000)
gbm.step(data = grv_yes,
gbm.x = 4:10,
gbm.y = grvcol,
family = "gaussian",
tree.complexity = 2,
learning.rate = 0.00000001,
bag.fraction = 0.7,
n.trees = 10)
gbm.step(data = grv_yes,
gbm.x = 4:10,
gbm.y = grvcol,
family = "gaussian",
tree.complexity = 2,
learning.rate = 0.00000001,
bag.fraction = 0.7,
n.trees = 5)
gbm.step(data = grv_yes,
gbm.x = 4:10,
gbm.y = grvcol,
family = "gaussian",
tree.complexity = 2,
learning.rate = 0.00000001,
bag.fraction = 0.7,
n.trees = 5,
step.size = 2)
gbm.step(data = grv_yes,
gbm.x = 4:10,
gbm.y = grvcol,
family = "gaussian",
tree.complexity = 2,
learning.rate = 0.00000001,
bag.fraction = 0.7,
n.trees = 5,
step.size = 1)
mysamples <- Adult_Females1
mysamples <- Adult_Females
mysamples$grv <- log(mysamples[,14])
mysamples$grv <- log(mysamples[,13])
grvcol <- which(colnames(mysamples) == "grv") # grv column number for BRT
grv_yes <- subset(mysamples, grv >= 0) # nonzero subset for gaussian BRTs
gbm.step(data = grv_yes,
gbm.x = 4:10,
gbm.y = grvcol,
family = "gaussian",
tree.complexity = 2,
learning.rate = 0.00000001,
bag.fraction = 0.7,
n.trees = 5,
step.size = 1)
gbm.step(data = grv_yes,
gbm.x = 4:9,
gbm.y = grvcol,
family = "gaussian",
tree.complexity = 2,
learning.rate = 0.00000001,
bag.fraction = 0.7,
n.trees = 5,
step.size = 1)
gbm.step(data = grv_yes,
gbm.x = 4:9,
gbm.y = grvcol,
family = "gaussian",
tree.complexity = 2,
learning.rate = 0.00000001,
bag.fraction = 0.7,
n.trees = 50,
step.size = 50)
gbm.step(data = grv_yes,
gbm.x = 4:9,
gbm.y = grvcol,
family = "gaussian",
tree.complexity = 2,
learning.rate = 0.00000001,
bag.fraction = 0.7,
n.trees = 10,
step.size = 10)
gbm.step(data = grv_yes,
gbm.x = 4:9,
gbm.y = grvcol,
family = "gaussian",
tree.complexity = 2,
learning.rate = 0.00000001,
bag.fraction = 0.7,
n.trees = 10,
step.size = 10)
gbm.step(data = grv_yes,
gbm.x = 4:9,
gbm.y = grvcol,
family = "gaussian",
tree.complexity = 2,
learning.rate = 0.00000001,
bag.fraction = 0.7,
n.trees = 10,
step.size = 10)
gbm.step(data = grv_yes,
gbm.x = 4:9,
gbm.y = grvcol,
family = "gaussian",
tree.complexity = 2,
learning.rate = 0.00000001,
bag.fraction = 0.7,
n.trees = 10,
step.size = 10)
gbm.step(data = grv_yes,
gbm.x = 4:9,
gbm.y = grvcol,
family = "gaussian",
tree.complexity = 2,
learning.rate = 0.00000001,
bag.fraction = 0.7,
n.trees = 10,
step.size = 10)
mysamples <- Adult_Females2
mysamples$grv <- log(mysamples[,14])
grvcol <- which(colnames(mysamples) == "grv") # grv column number for BRT
grv_yes <- subset(mysamples, grv >= 0) # nonzero subset for gaussian BRTs
gbm.step(data = grv_yes,
gbm.x = 4:9,
gbm.y = grvcol,
family = "gaussian",
tree.complexity = 7,
learning.rate = 0.005,
bag.fraction = 0.5)
gbm.step(data = grv_yes,
gbm.x = 4:10,
gbm.y = grvcol,
family = "gaussian",
tree.complexity = 7,
learning.rate = 0.005,
bag.fraction = 0.5)
source('~/Dropbox/Galway/Analysis/R/gbm.auto/Gbm.auto_extras/gbm.auto.binGausSepParams.R')
library(gbm.auto) # load the gbm.auto suite
mygrids <- gbm.auto::grids # load grids file
Juveniles <- gbm.auto::Juveniles # load juveniles subset
Adult_Females <- gbm.auto::Adult_Females
getwd()
setwd("/home/simon/Desktop/gbm temp/Cons/")
library("shapefiles", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.3")
read.shapefile("../CroppedMap/Crop_Map")
Crop_Map <- read.shapefile("../CroppedMap/Crop_Map")
gbm.cons(mygrids = mygrids,
subsets = c("Juveniles", "Adult_Females"), #specify subset objects
alerts = TRUE, map = TRUE, BnW = TRUE,
resvars = c(43:44,10:11),
gbmautos = TRUE,
expvars = list(c(4:10,14,16,20,24,28,36),
c(4:10,14,17,21,25,29,37),
4:9, 4:9), # 4 entries, 4 gbm.auto runs
tcs = list(c(2,13), c(2,13), c(2,6), c(2,6)),
lrs = list(c(0.01,0.005), c(0.01,0.005), 0.0001, 0.0005), # small lrs fail for the more data-limited subsets and were removed
zeroes = rep(FALSE,4), # remove the zero category for maps. All other parameters are omitted and default to their gbm.auto defaults (mostly TRUE).
mapshape = Crop_Map)
traceback()
getwd()
setwd("/home/simon/Desktop/gbm temp/Cons/")
gbm.cons(mygrids = mygrids,
subsets = c("Juveniles", "Adult_Females"), #specify subset objects
alerts = TRUE, map = TRUE, BnW = TRUE,
resvars = c(43:44,10:11),
gbmautos = TRUE,
expvars = list(c(4:10,14,16,20,24,28,36),
c(4:10,14,17,21,25,29,37),
4:9, 4:9), # 4 entries, 4 gbm.auto runs
tcs = list(c(2,13), c(2,13), c(2,6), c(2,6)),
lrs = list(c(0.01,0.005), c(0.01,0.005), 0.0001, 0.0005), # small lrs fail for the more data-limited subsets and were removed
zeroes = rep(FALSE,4), # remove the zero category for maps. All other parameters are omitted and default to their gbm.auto defaults (mostly TRUE).
mapshape = Crop_Map)
getwd()
traceback()
source('~/Dropbox/Galway/Analysis/R/gbm.auto/Gbm.auto_extras/gbm.auto.binGausSepParams.R')
source('~/Dropbox/Galway/Analysis/R/gbm.auto/R/gbm.cons.R')
getwd()
setwd("../../")
getwd()
gbm.cons(mygrids = mygrids,
subsets = c("Juveniles", "Adult_Females"), #specify subset objects
alerts = TRUE, map = TRUE, BnW = TRUE,
resvars = c(43:44,10:11),
gbmautos = TRUE,
expvars = list(c(4:10,14,16,20,24,28,36),
c(4:10,14,17,21,25,29,37),
4:9, 4:9), # 4 entries, 4 gbm.auto runs
tcs = list(c(2,13), c(2,13), c(2,6), c(2,6)),
lrs = list(c(0.01,0.005), c(0.01,0.005), 0.0001, 0.0005), # small lrs fail for the more data-limited subsets and were removed
zeroes = rep(FALSE,4), # remove the zero category for maps. All other parameters are omitted and default to their gbm.auto defaults (mostly TRUE).
mapshape = Crop_Map)
warnings()
getwd()
source('~/Dropbox/Galway/Analysis/R/gbm.auto/R/gbm.cons.R')
setwd("../../") # return to original directory
getwd()
gbm.cons(mygrids = mygrids, subsets = c("Juveniles", "Adult_Females"), gbmautos = FALSE, resvars = c(43:44,10:11), mapshape = Crop_Map)
source('~/Dropbox/Galway/Analysis/R/gbm.auto/R/gbm.cons.R')
document()
library("devtools", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.3")
document()
setwd("/home/simon/Desktop/gbm temp/")
library("gbm.auto", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.3")
mygrids <- gbm.auto::grids # load grids
mysamples <- gbm.auto::samples
library("shapefiles", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.3")
Crop_Map <- read.shapefile("./CroppedMap/Crop_Map")
library("devtools", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.3")
document()
mygrids <- gbm.auto::grids # load grids
mysamples <- gbm.auto::samples # load samples
setwd("/home/simon/Desktop/gbm temp/sepParamTestbench/")
source('~/Dropbox/Galway/Analysis/R/gbm.auto/R/gbm.utils.R')
library("shapefiles")
Crop_Map <- read.shapefile("/home/simon/Desktop/gbm temp/CroppedMap/Crop_Map")
source('~/Dropbox/Galway/Analysis/R/gbm.auto/Gbm.auto_extras/gbm.auto.binGausSepParams.R')
gbm.auto2(samples = mysamples,
grids = mygrids,
expvar = c(4:10),
resvar = 11,
tc = 2,
lr = list(c(0.01,0.02),0.03),
bf = 0.5,
mapshape = Crop_Map, simp = FALSE, varint = FALSE, map = FALSE, BnW = FALSE, RSB = F, linesfiles = FALSE, savegbm = F)
source('~/Dropbox/Galway/Analysis/R/gbm.auto/Gbm.auto_extras/gbm.auto.binGausSepParams.R')
gbm.auto2(samples = mysamples,
grids = mygrids,
expvar = c(4:10),
resvar = 11,
tc = 2,
lr = list(c(0.01,0.02),0.03),
bf = 0.5,
mapshape = Crop_Map, simp = FALSE, varint = FALSE, map = FALSE, BnW = FALSE, RSB = F, linesfiles = FALSE, savegbm = F)
source('~/Dropbox/Galway/Analysis/R/gbm.auto/Gbm.auto_extras/gbm.auto.binGausSepParams.R')
gbm.auto2(samples = mysamples,
grids = mygrids,
expvar = c(4:10),
resvar = 11,
tc = 2,
lr = list(c(0.01,0.02),0.03),
bf = 0.5,
mapshape = Crop_Map, simp = FALSE, varint = FALSE, map = FALSE, BnW = FALSE, RSB = F, linesfiles = FALSE, savegbm = F)
source('~/Dropbox/Galway/Analysis/R/gbm.auto/Gbm.auto_extras/gbm.auto.binGausSepParams.R')
gbm.auto2(samples = mysamples,
grids = mygrids,
expvar = c(4:10),
resvar = 11,
tc = 2,
lr = list(c(0.05,0.04),0.03),
bf = 0.5,
mapshape = Crop_Map, simp = FALSE, varint = FALSE, map = FALSE, BnW = FALSE, RSB = F, linesfiles = FALSE, savegbm = F)
source('~/Dropbox/Galway/Analysis/R/gbm.auto/Gbm.auto_extras/gbm.auto.binGausSepParams.R')
gbm.auto2(samples = mysamples,
grids = mygrids,
expvar = c(4:10),
resvar = 11,
tc = 2,
lr = list(c(0.05,0.04),0.03),
bf = 0.5,
mapshape = Crop_Map, simp = FALSE, varint = FALSE, map = FALSE, BnW = FALSE, RSB = F, linesfiles = FALSE, savegbm = F)
source('~/Dropbox/Galway/Analysis/R/gbm.auto/Gbm.auto_extras/gbm.auto.binGausSepParams.R')
source('~/Dropbox/Galway/Analysis/R/gbm.auto/Gbm.auto_extras/gbm.auto.binGausSepParams.R')
source('~/Dropbox/Galway/Analysis/R/gbm.auto/Gbm.auto_extras/gbm.auto.binGausSepParams.R')
gbm.auto2(samples = mysamples,
grids = mygrids,
expvar = c(4:10),
resvar = 11,
tc = 2,
lr = list(c(0.05,0.04),0.03),
bf = 0.5,
mapshape = Crop_Map, simp = FALSE, varint = FALSE, map = T, BnW = FALSE, RSB = F, linesfiles = FALSE, savegbm = F, max/trees = 30000)
gbm.auto2(samples = mysamples,
grids = mygrids,
expvar = c(4:10),
resvar = 11,
tc = 2,
lr = list(c(0.05,0.04),0.03),
bf = 0.5,
mapshape = Crop_Map, simp = FALSE, varint = FALSE, map = T, BnW = FALSE, RSB = F, linesfiles = FALSE, savegbm = F, max.trees = 30000)
library("gbm.auto", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.3")
gbm.auto(samples = mysamples,
grids = mygrids,
expvar = c(4:10),
resvar = 11,
tc = 2,
lr = list(c(0.05,0.04),0.03),
bf = 0.5,
mapshape = Crop_Map, simp = FALSE, varint = FALSE, map = T, BnW = FALSE, RSB = F, linesfiles = FALSE, savegbm = F, max.trees = 30000)
source('~/Dropbox/Galway/Analysis/R/gbm.auto/Gbm.auto_extras/gbm.auto.binGausSepParams.R')
source('~/Dropbox/Galway/Analysis/R/gbm.auto/Gbm.auto_extras/gbm.auto.binGausSepParams.R')
source('~/Dropbox/Galway/Analysis/R/gbm.auto/Gbm.auto_extras/gbm.auto.binGausSepParams.R')
source('~/Dropbox/Galway/Analysis/R/gbm.auto/Gbm.auto_extras/gbm.auto.binGausSepParams.R')
source('~/Dropbox/Galway/Analysis/R/gbm.auto/Gbm.auto_extras/gbm.auto.binGausSepParams.R')
source('~/Dropbox/Galway/Analysis/R/gbm.auto/Gbm.auto_extras/gbm.auto.binGausSepParams.R')
source('~/Dropbox/Galway/Analysis/R/gbm.auto/Gbm.auto_extras/gbm.auto.binGausSepParams.R')
source('~/Dropbox/Galway/Analysis/R/gbm.auto/Gbm.auto_extras/gbm.auto.binGausSepParams.R')
source('~/Dropbox/Galway/Analysis/R/gbm.auto/Gbm.auto_extras/gbm.auto.binGausSepParams.R')
source('~/Dropbox/Galway/Analysis/R/gbm.auto/Gbm.auto_extras/gbm.auto.binGausSepParams.R')
source('~/Dropbox/Galway/Analysis/R/gbm.auto/Gbm.auto_extras/gbm.auto.binGausSepParams.R')
mygrids <- gbm.auto::grids # load grids
mysamples <- gbm.auto::samples # load samples
setwd("/home/simon/Desktop/gbm temp/sepParamTestbench/")
source('~/Dropbox/Galway/Analysis/R/gbm.auto/R/gbm.utils.R')
library("shapefiles")
Crop_Map <- read.shapefile("/home/simon/Desktop/gbm temp/CroppedMap/Crop_Map")
source('~/Dropbox/Galway/Analysis/R/gbm.auto/Gbm.auto_extras/gbm.auto.binGausSepParams.R')
source('~/Dropbox/Galway/Analysis/R/gbm.auto/Gbm.auto_extras/gbm.auto.binGausSepParams.R')
testlist <- list(c(1,2),c(3,4))
testlist
testlist[[1]]
testlist[[2]]
testved <- c(5,6)
testved
testlist2 <- list(c(7,8),9)
testlist2
testlist2[[1]]
testlist2[[2]]
testlist2 <- list(10,c(11,12))
testlist2
testlist2[[1]]
testlist2[[2]]
length(testlist2)
length(testlist1)
length(testlist)
length(testved)
testlist3 <- list(c(1,2),c(3,4),c(5,6))
testlist3
testlist3[[1]]
testlist3[[2]]
testlist3[[3]]
length(testlist3)
source('~/Dropbox/Galway/Analysis/R/gbm.auto/Gbm.auto_extras/gbm.auto.binGausSepParams.R')
source('~/Dropbox/Galway/Analysis/R/gbm.auto/Gbm.auto_extras/gbm.auto.binGausSepParams.R')
source('~/Dropbox/Galway/Analysis/R/gbm.auto/Gbm.auto_extras/gbm.auto.binGausSepParams.R')
source('~/Dropbox/Galway/Analysis/R/gbm.auto/Gbm.auto_extras/gbm.auto.binGausSepParams.R')
