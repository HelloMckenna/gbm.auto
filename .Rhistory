data(coast)
shape = coast
gbm.auto(expvar = c(4:7, 9, 11), resvar = 13, grids = mygrids, lr = c(0.005, 0.001), ZI = TRUE, savegbm = FALSE, mapshape = coast)
source('/home/simon/Dropbox/Galway/Analysis/R/gbm.auto/gbm.utils.R')
source('/home/simon/Dropbox/Galway/Analysis/R/gbm.auto/gbm.map.R')
source('/home/simon/Dropbox/Galway/Analysis/R/gbm.auto/gbm.basemap.R')
source('/home/simon/Dropbox/Galway/Analysis/R/gbm.auto/gbm.rsb.R')
source('/home/simon/Dropbox/Galway/Analysis/R/gbm.auto/gbm.auto.R')
source('/home/simon/Dropbox/Galway/Analysis/R/gbm.auto/gbm.valuemap.R')
mysamples <- read.csv("/home/simon/Dropbox/Galway/Project Sections/3b. BRT plus Bpa Sam & Dave/Data/Samples_allRays_Env_F_E_NoGrain.csv", header = TRUE, row.names = NULL)
mygrids <- read.csv("/home/simon/Dropbox/Galway/Project Sections/2. Spatial subsets inc fishery data/Data/Maps/Juveniles/grids_Enviro_HansLPUE_MI&MMOlog_MIscallopVMS_MMOWhelk_MMOScal_Dist2Srvy_Preds_IS_NA_HansE_NoGrain.csv", header = TRUE)
# set directory, with fishing E as an expvar
setwd("/home/simon/Dropbox/Galway/Project Sections/3b. BRT plus Bpa Sam & Dave/Analysis/Model Outputs/With E")
# load mapplots coast and set as shape
library(mapplots)
data(coast)
shape = coast
gbm.auto(expvar = c(4:7, 9, 11), resvar = 12, grids = mygrids, lr = c(0.005, 0.001), ZI = TRUE, savegbm = FALSE, mapshape = coast)
####Load scripts & data####
source('/home/simon/Dropbox/Galway/Analysis/R/gbm.auto/gbm.utils.R')
source('/home/simon/Dropbox/Galway/Analysis/R/gbm.auto/gbm.map.R')
source('/home/simon/Dropbox/Galway/Analysis/R/gbm.auto/gbm.basemap.R')
source('/home/simon/Dropbox/Galway/Analysis/R/gbm.auto/gbm.rsb.R')
source('/home/simon/Dropbox/Galway/Analysis/R/gbm.auto/gbm.auto.R')
source('/home/simon/Dropbox/Galway/Analysis/R/gbm.auto/gbm.valuemap.R')
mysamples <- read.csv("/home/simon/Dropbox/Galway/Project Sections/3b. BRT plus Bpa Sam & Dave/Data/Samples_allRays_Env_F_E_NoGrain.csv", header = TRUE, row.names = NULL)
mygrids <- read.csv("/home/simon/Dropbox/Galway/Project Sections/2. Spatial subsets inc fishery data/Data/Maps/Juveniles/grids_Enviro_HansLPUE_MI&MMOlog_MIscallopVMS_MMOWhelk_MMOScal_Dist2Srvy_Preds_IS_NA_HansE_NoGrain.csv", header = TRUE)
# set directory, with fishing E as an expvar
setwd("/home/simon/Dropbox/Galway/Project Sections/3b. BRT plus Bpa Sam & Dave/Analysis/Model Outputs/With E")
# load mapplots coast and set as shape
library(mapplots)
data(coast)
shape = coast
gbm.auto(expvar = c(4:7, 9, 11), resvar = 14, grids = mygrids, lr = c(0.005, 0.001), ZI = TRUE, savegbm = FALSE, mapshape = coast)
####Load scripts & data####
source('/home/simon/Dropbox/Galway/Analysis/R/gbm.auto/gbm.utils.R')
source('/home/simon/Dropbox/Galway/Analysis/R/gbm.auto/gbm.map.R')
source('/home/simon/Dropbox/Galway/Analysis/R/gbm.auto/gbm.basemap.R')
source('/home/simon/Dropbox/Galway/Analysis/R/gbm.auto/gbm.rsb.R')
source('/home/simon/Dropbox/Galway/Analysis/R/gbm.auto/gbm.auto.R')
source('/home/simon/Dropbox/Galway/Analysis/R/gbm.auto/gbm.valuemap.R')
mysamples <- read.csv("/home/simon/Dropbox/Galway/Project Sections/3b. BRT plus Bpa Sam & Dave/Data/Samples_allRays_Env_F_E_NoGrain.csv", header = TRUE, row.names = NULL)
mygrids <- read.csv("/home/simon/Dropbox/Galway/Project Sections/2. Spatial subsets inc fishery data/Data/Maps/Juveniles/grids_Enviro_HansLPUE_MI&MMOlog_MIscallopVMS_MMOWhelk_MMOScal_Dist2Srvy_Preds_IS_NA_HansE_NoGrain.csv", header = TRUE)
# set directory, with fishing E as an expvar
setwd("/home/simon/Dropbox/Galway/Project Sections/3b. BRT plus Bpa Sam & Dave/Analysis/Model Outputs/With E")
# load mapplots coast and set as shape
library(mapplots)
data(coast)
shape = coast
gbm.auto(expvar = c(4:7, 9, 11), resvar = 15, grids = mygrids, lr = c(0.005, 0.001), ZI = TRUE, savegbm = FALSE, mapshape = coast)
install.packages("devtools")
library("devtools", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.3")
devtools::install_github('SimonDedman/gbm.auto')
devtools()
devtools.desc
create("gbm.auto")
devtools::use_package("dplyr")
devtools::use_package("gbm")
devtools::use_package("dismo")
devtools::use_package("beepr")
devtools::use_package("labeling")
devtools::use_package("mapplots")
devtools::use_package("rgdal")
devtools::use_package("rgeos")
devtools::use_package("raster")
devtools::install_github('SimonDedman/gbm.auto')
install.packages(c("Rcpp", "stringr"))
getwd()
document()
document()
document()
document()
document()
document()
document()
warnings()
document()
library("gbm.auto", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.3")
document()
library("devtools", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.3")
document()
document()
document()
document()
document()
document()
document()
document()
document()
document()
document()
document()
document()
document()
document()
library("devtools", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.3")
document()
getwd()
setwd(./data)
setwd("./data")
getwd()
dir.
dir()
grids <- read.csv("grids.csv")
samples <- read.csv("samples.csv")
Adult_Females <- read.csv("Adult_Females.csv")
Juveniles <- read.csv("Juveniles.csv")
AllScaledData <- read.csv("AllScaledData.csv")
View(samples)
save(samples, file = "samples.RData", compress = TRUE)
save(grids, file = "grids.RData", compress = TRUE)
save(Juveniles, file = "Juveniles.RData", compress = TRUE)
save(Adult_Females, file = "Adult_Females.RData", compress = TRUE)
save(AllScaledData, file = "AllScaledData.RData", compress = TRUE)
save(AllScaledData, file = "AllScaledData2.RDa", compress = TRUE)
ASD <- AllScaledData
save(ASD, file = "ASD.RDa", compress = TRUE)
library("gbm.auto", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.3")
Samples <- read.csv("~/Dropbox/Galway/Project Sections/4b. Methods Paper BRT/Chuck's gbmauto attempts/PamlicoSoundSamples.csv")
View(Samples)
Sharks <- read.csv("~/Dropbox/Galway/Project Sections/4b. Methods Paper BRT/Chuck's gbmauto attempts/PamlicoSoundSharks.csv")
View(Sharks)
Samples <- read.csv("~/Dropbox/Galway/Project Sections/4b. Methods Paper BRT/Chuck's gbmauto attempts/PamlicoSoundSharks.csv")
View(Samples)
Grids <- read.csv("~/Dropbox/Galway/Project Sections/4b. Methods Paper BRT/Chuck's gbmauto attempts/PamlicoSoundSamples.csv")
View(Grids)
getwd()
setwd(../)
setwd("../")
setwd("../")
setwd("../")
getwd()
setwd("/Project Sections/4b. Methods Paper BRT/Chuck's gbmauto attempts/")
setwd(".\Project Sections\4b. Methods Paper BRT\Chuck's gbmauto attempts")
setwd("./Project Sections/4b. Methods Paper BRT/Chuck's gbmauto attempts")
getwd()
gbm.auto(expvar = c(8:13), resvar = 17, grids = Grids, samples = Samples, lr = 0.001, bf = 0.75, gridslat=3, gridslon=4, map=TRUE, pngtype="quartz", varint=FALSE, simp=FALSE, max.trees=28000)
library("devtools", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.3")
devtools::install_github('SimonDedman/gbm.auto')
detach("package:gbm.auto", unload=TRUE)
require(gbm.auto)
gbm.auto(expvar = c(8:13), resvar = 17, grids = Grids, samples = Samples, lr = 0.001, bf = 0.75, gridslat=3, gridslon=4, map=TRUE, pngtype="quartz", varint=FALSE, simp=FALSE, max.trees=28000)
gbm.auto(expvar = c(8:13), resvar = 17, grids = Grids, samples = Samples, lr = 0.001, bf = 0.75, gridslat=3, gridslon=4, map=TRUE, pngtype="quartz", varint=FALSE, simp=FALSE, max.trees=28000)
install.packages(c("curl", "jsonlite"))
library("gbm.auto", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.3")
library("devtools", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.3")
devtools::install_github('SimonDedman/gbm.auto')
devtools::install_github('SimonDedman/gbm.auto')
devtools::install_github('SimonDedman/gbm.auto')
warnings()
devtools::install_github('SimonDedman/gbm.auto')
document()
library("devtools", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.3")
document()
document()
document()
document()
document()
document()
document()
document()
document()
document()
devtools::install_github('SimonDedman/gbm.auto')
document()
warnings()
traceback()
document()
devtools::install_github('SimonDedman/gbm.auto')
document()
devtools::install_github('SimonDedman/gbm.auto')
document()
document()
document()
devtools::install_github('SimonDedman/gbm.auto')
document()
library("devtools", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.3")
document()
document()
library("devtools", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.3")
document()
devtools::install_github('SimonDedman/gbm.auto')
document()
devtools::install_github('SimonDedman/gbm.auto')
library("gbm.auto", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.3")
setwd("/home/simon/Dropbox/Galway/Project Sections/4b. Methods Paper BRT/Chuck's gbmauto attempts/")
getwd()
sharks<-read.csv("PamlicoSoundSharks.csv", header=TRUE)
fallgrids<-read.csv("FallGrid.csv", header=TRUE, row.names=NULL)
range(sharks[,3])
range(sharks[,4])
-range(sharks[,4])
rev(range(sharks[,4]))
range(sharks[,4])
chuckbounds <- c(range(sharks[,4]),range(sharks[,3]))
chuckbounds
gbm.basemap <- function(bounds = chuckbounds, getzip = "./GSHHS_shp/", savename = "Fall_Crop_Map", res = "f")
gbm.basemap(bounds = chuckbounds, getzip = "./GSHHS_shp/", savename = "Fall_Crop_Map", res = "f")
gbm.auto(expvar = c(8:13), resvar = 17, grids = fallgrids, samples = sharks, lr = 0.001, bf = 0.75, gridslat=3, gridslon=4, map=TRUE, pngtype="quartz", varint=FALSE, simp=FALSE, max.trees=28000)
gbm.auto(expvar = c(8:13), resvar = 17, grids = fallgrids, samples = sharks, lr = 0.001, bf = 0.75, gridslat=3, gridslon=4, map=TRUE, pngtype="cairo-png", varint=FALSE, simp=FALSE, max.trees=28000, mapshape = cropshp)
gbm.auto(expvar = c(8:13), resvar = 17, grids = fallgrids, samples = sharks, lr = 0.001, bf = 0.75, tc = 2, gridslat=3, gridslon=4, map=TRUE, pngtype="cairo-png", varint=FALSE, simp=FALSE, max.trees=28000, mapshape = cropshp)
warnings()
gbm.auto(expvar = c(8:13), resvar = 17, grids = fallgrids, samples = sharks, lr = 0.001, bf = 0.75, tc = 2, gridslat=3, gridslon=4, map=TRUE, pngtype="cairo-png", varint=FALSE, simp=FALSE, max.trees=28000, mapshape = cropshp)
gbm.auto(expvar = c(8:13), resvar = 17, grids = fallgrids, samples = sharks, lr = 0.0005, bf = 0.75, tc = 2, gridslat=3, gridslon=4, map=TRUE, pngtype="cairo-png", varint=FALSE, simp=FALSE, max.trees=28000, mapshape = cropshp)
gbm.auto(expvar = c(8:13), resvar = 17, grids = fallgrids, samples = sharks, lr = 0.0001, bf = 0.75, tc = 2, gridslat=3, gridslon=4, map=TRUE, pngtype="cairo-png", varint=FALSE, simp=FALSE, max.trees=28000, mapshape = cropshp)
library("devtools", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.3")
document()
document()
logem <- log(sharks[,17])
logem
sharks$grv <- logem
grv_yes <- subset(sharks, grv >= 0)
gausalone <- gbm.step(data = grv_yes, gbm.x = c(8:13), gbm.y = 26, family = "gaussian", tree.complexity = 2, learning.rate = 0.0001, bag.fraction = 0.75)
library("gbm.auto", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.3")
library("dismo", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.3")
gausalone <- gbm.step(data = grv_yes, gbm.x = c(8:13), gbm.y = 26, family = "gaussian", tree.complexity = 2, learning.rate = 0.0001, bag.fraction = 0.75)
gausalone <- gbm.step(data = grv_yes, gbm.x = c(8:13), gbm.y = 26, family = "gaussian", tree.complexity = 2, learning.rate = 0.00001, bag.fraction = 0.75)
grv_yes$grv
grv_yes$SandbarShark
gausalone <- gbm.step(data = grv_yes, gbm.x = c(8:13), gbm.y = 17, family = "gaussian", tree.complexity = 2, learning.rate = 0.00001, bag.fraction = 0.75)
gausalone <- gbm.step(data = grv_yes, gbm.x = c(8:13), gbm.y = 17, family = "gaussian", tree.complexity = 2, learning.rate = 0.000001, bag.fraction = 0.75)
gausalone <- gbm.step(data = grv_yes, gbm.x = c(8:13), gbm.y = 26, family = "gaussian", tree.complexity = 2, learning.rate = 0.0000001, bag.fraction = 0.75)
gausalone <- gbm.step(data = grv_yes, gbm.x = c(8:13), gbm.y = 26, family = "gaussian", tree.complexity = 2, learning.rate = 0.00000001, bag.fraction = 0.75)
gausalone <- gbm.step(data = grv_yes, gbm.x = c(8:13), gbm.y = 26, family = "gaussian", tree.complexity = 2, learning.rate = 0.000000001, bag.fraction = 0.75)
gausalone <- gbm.step(data = grv_yes, gbm.x = c(8:13), gbm.y = 17, family = "gaussian", tree.complexity = 2, learning.rate = 0.0000001, bag.fraction = 0.75)
gbm.auto(expvar = c(8:13), resvar = 17, grids = fallgrids, samples = sharks, lr = 0.001, bf = 0.75, tc = 2, gridslat=3, gridslon=4, map=TRUE, pngtype="cairo-png", varint=FALSE, simp=FALSE, max.trees=28000, mapshape = cropshp)
warnings()
traceback()
sharks<-read.csv("PamlicoSoundSharks.csv", header=TRUE)
setwd("/home/simon/Dropbox/Galway/Project Sections/4b. Methods Paper BRT/Chuck's gbmauto attempts/")
sharks<-read.csv("PamlicoSoundSharks.csv", header=TRUE)
gbm.auto(expvar = c(8:13), resvar = 17, grids = fallgrids, samples = sharks, lr = 0.001, bf = 0.75, tc = 2, gridslat=3, gridslon=4, map=TRUE, pngtype="cairo-png", varint=FALSE, simp=FALSE, max.trees=28000, mapshape = cropshp)
gbm.auto(expvar = c(8:13), resvar = 17, grids = fallgrids, samples = sharks, lr = 0.0001, bf = 0.75, tc = 2, gridslat=3, gridslon=4, map=TRUE, pngtype="cairo-png", varint=FALSE, simp=FALSE, max.trees=28000, mapshape = cropshp)
sharks[,17]
sharks[,17]>0
Sandbars <- subset(sharks, sharks[,17] >0)
Bulls <- subset(sharks, sharks[,16] >0)
Blacktips <- subset(sharks, sharks[,15] >0)
AShpNose <- subset(sharks, sharks[,14] >0)
SmoothDog <- subset(sharks, sharks[,18] >0)
SpinyDog <- subset(sharks, sharks[,19] >0)
gbm.auto(expvar = c(8:13), resvar = 18, grids = fallgrids, samples = sharks, lr = 0.0001, bf = 0.75, tc = 2, gridslat=3, gridslon=4, map=TRUE, pngtype="cairo-png", varint=FALSE, simp=FALSE, max.trees=28000, mapshape = cropshp)
mysamples <- read.csv("/home/simon/Dropbox/Galway/Project Sections/3b. BRT plus Bpa Sam & Dave/Data/Samples_allRays_Env_F_E_NoGrain.csv", header = TRUE, row.names = NULL)
mygrids <- read.csv("/home/simon/Dropbox/Galway/Project Sections/2. Spatial subsets inc fishery data/Data/Maps/Juveniles/grids_Enviro_HansLPUE_MI&MMOlog_MIscallopVMS_MMOWhelk_MMOScal_Dist2Srvy_Preds_IS_NA_HansE_NoGrain.csv", header = TRUE)
setwd("/home/simon/Dropbox/Galway/Project Sections/3b. BRT plus Bpa Sam & Dave/Analysis/Model Outputs/With E")
library(mapplots)
data(coast)
shape = coast
gbm.auto(expvar = c(4:7, 9, 11), resvar = 12, grids = mygrids, lr = c(0.005, 0.001), ZI = TRUE, savegbm = FALSE, mapshape = coast)
lrtest1 <- 0.01
lrtest2 <- c(0.01,0.0015)
lrtest1[[1]]
lrtest2[[1]] #works
if length(lrtest2)>1 lrtest2[[2]] else lrtest2[[1]]
if (length(lrtest2)>1) lrtest2[[2]] else lrtest2[[1]]
source('/home/simon/Dropbox/Galway/Analysis/R/gbm.auto/gbm.map.R')
source('/home/simon/Dropbox/Galway/Analysis/R/gbm.auto/gbm.basemap.R')
source('/home/simon/Dropbox/Galway/Analysis/R/gbm.auto/gbm.rsb.R')
source('/home/simon/Dropbox/Galway/Analysis/R/gbm.auto/gbm.auto.R')
source('/home/simon/Dropbox/Galway/Analysis/R/gbm.auto/gbm.valuemap.R')
source('/home/simon/Dropbox/Galway/Analysis/R/gbm.auto/R/gbm.utils.R')
source('/home/simon/Dropbox/Galway/Analysis/R/gbm.auto/R/gbm.map.R')
source('/home/simon/Dropbox/Galway/Analysis/R/gbm.auto/R/gbm.basemap.R')
source('/home/simon/Dropbox/Galway/Analysis/R/gbm.auto/R/gbm.rsb.R')
source('/home/simon/Dropbox/Galway/Analysis/R/gbm.auto/R/gbm.auto.R')
source('/home/simon/Dropbox/Galway/Analysis/R/gbm.auto/R/gbm.valuemap.R')
mysamples <- read.csv("/home/simon/Dropbox/Galway/Project Sections/3b. BRT plus Bpa Sam & Dave/Data/Samples_allRays_Env_F_E_NoGrain.csv", header = TRUE, row.names = NULL)
mygrids <- read.csv("/home/simon/Dropbox/Galway/Project Sections/2. Spatial subsets inc fishery data/Data/Maps/Juveniles/grids_Enviro_HansLPUE_MI&MMOlog_MIscallopVMS_MMOWhelk_MMOScal_Dist2Srvy_Preds_IS_NA_HansE_NoGrain.csv", header = TRUE)
setwd("/home/simon/Dropbox/Galway/Project Sections/3b. BRT plus Bpa Sam & Dave/Analysis/Model Outputs/With E")
library(mapplots)
data(coast)
shape = coast
gbm.auto(expvar = c(4:7, 9, 11), resvar = 12, grids = mygrids, lr = c(0.005), tc = 2, ZI = TRUE, savegbm = FALSE, mapshape = coast)
warnings()
gbm.auto(expvar = c(4:7, 9, 11), resvar = 12, grids = mygrids, lr = c(0.005), tc = 2, ZI = TRUE, savegbm = FALSE, mapshape = coast)
source('~/Dropbox/Galway/Analysis/R/gbm.auto/R/gbm.auto.R')
gbm.auto(expvar = c(4:7, 9, 11), resvar = 12, grids = mygrids, lr = c(0.005), tc = 2, ZI = TRUE, savegbm = FALSE, mapshape = coast)
library("devtools", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.3")
document()
document()
library("devtools", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.3")
document()
devtools::install_github('SimonDedman/gbm.auto')
mysamples <- read.csv("/home/simon/Dropbox/Galway/Project Sections/3b. BRT plus Bpa Sam & Dave/Data/Samples_allRays_Env_F_E_NoGrain.csv", header = TRUE, row.names = NULL)
mygrids <- read.csv("/home/simon/Dropbox/Galway/Project Sections/2. Spatial subsets inc fishery data/Data/Maps/Juveniles/grids_Enviro_HansLPUE_MI&MMOlog_MIscallopVMS_MMOWhelk_MMOScal_Dist2Srvy_Preds_IS_NA_HansE_NoGrain.csv", header = TRUE)
setwd("/home/simon/Dropbox/Galway/Project Sections/3b. BRT plus Bpa Sam & Dave/Analysis/Model Outputs/With E")
library(mapplots)
data(coast)
shape = coast
gbm.auto(expvar = c(4:7, 9, 11), resvar = 12, grids = mygrids, lr = c(0.005, 0.001), ZI = TRUE, savegbm = FALSE, mapshape = coast)
gbm.auto(expvar = c(4:7, 9, 11), resvar = 12, grids = mygrids, lr = c(0.005), ZI = TRUE, savegbm = FALSE, mapshape = coast)
print("L271")
print("L273")
source('~/Dropbox/Galway/Analysis/R/gbm.auto/R/gbm.auto.R')
gbm.auto(expvar = c(4:7, 9, 11), resvar = 12, grids = mygrids, lr = c(0.005), ZI = TRUE, savegbm = FALSE, mapshape = coast)
devtools::install_github('SimonDedman/gbm.auto')
library("gbm.auto", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.3")
mysamples <- read.csv("/home/simon/Dropbox/Galway/Project Sections/3b. BRT plus Bpa Sam & Dave/Data/Samples_allRays_Env_F_E_NoGrain.csv", header = TRUE, row.names = NULL)
mygrids <- read.csv("/home/simon/Dropbox/Galway/Project Sections/2. Spatial subsets inc fishery data/Data/Maps/Juveniles/grids_Enviro_HansLPUE_MI&MMOlog_MIscallopVMS_MMOWhelk_MMOScal_Dist2Srvy_Preds_IS_NA_HansE_NoGrain.csv", header = TRUE)
# set directory, with fishing E as an expvar
setwd("/home/simon/Dropbox/Galway/Project Sections/3b. BRT plus Bpa Sam & Dave/Analysis/Model Outputs/With E")
# load mapplots coast and set as shape
library(mapplots)
data(coast)
shape = coast
# run gbm.autos, NoGrain; cuckoo
gbm.auto(expvar = c(4:7, 9, 11), resvar = 12, grids = mygrids, lr = c(0.005), ZI = TRUE, savegbm = FALSE, mapshape = coast)
warnings()
source('~/Dropbox/Galway/Analysis/R/gbm.auto/R/gbm.auto.R')
detach("package:gbm.auto", unload=TRUE)
devtools::install_github('SimonDedman/gbm.auto')
library("gbm.auto", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.3")
rm(ls())
library("gbm.auto", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.3")
mysamples <- read.csv("/home/simon/Dropbox/Galway/Project Sections/3b. BRT plus Bpa Sam & Dave/Data/Samples_allRays_Env_F_E_NoGrain.csv", header = TRUE, row.names = NULL)
mygrids <- read.csv("/home/simon/Dropbox/Galway/Project Sections/2. Spatial subsets inc fishery data/Data/Maps/Juveniles/grids_Enviro_HansLPUE_MI&MMOlog_MIscallopVMS_MMOWhelk_MMOScal_Dist2Srvy_Preds_IS_NA_HansE_NoGrain.csv", header = TRUE)
# set directory, with fishing E as an expvar
setwd("/home/simon/Dropbox/Galway/Project Sections/3b. BRT plus Bpa Sam & Dave/Analysis/Model Outputs/With E")
# load mapplots coast and set as shape
library(mapplots)
data(coast)
shape = coast
# run gbm.autos, NoGrain; cuckoo
gbm.auto(expvar = c(4:7, 9, 11), resvar = 12, grids = mygrids, lr = c(0.005), ZI = TRUE, savegbm = FALSE, mapshape = coast)
library("devtools", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.3")
source('~/Dropbox/Galway/Analysis/R/gbm.auto/R/gbm.auto.R')
document()
library("devtools", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.3")
document()
devtools::install_github('SimonDedman/gbm.auto')
mysamples <- read.csv("/home/simon/Dropbox/Galway/Project Sections/3b. BRT plus Bpa Sam & Dave/Data/Samples_allRays_Env_F_E_NoGrain.csv", header = TRUE, row.names = NULL)
mygrids <- read.csv("/home/simon/Dropbox/Galway/Project Sections/2. Spatial subsets inc fishery data/Data/Maps/Juveniles/grids_Enviro_HansLPUE_MI&MMOlog_MIscallopVMS_MMOWhelk_MMOScal_Dist2Srvy_Preds_IS_NA_HansE_NoGrain.csv", header = TRUE)
# set directory, with fishing E as an expvar
setwd("/home/simon/Dropbox/Galway/Project Sections/3b. BRT plus Bpa Sam & Dave/Analysis/Model Outputs/With E")
# load mapplots coast and set as shape
library(mapplots)
data(coast)
shape = coast
# run gbm.autos, NoGrain; cuckoo
gbm.auto(expvar = c(4:7, 9, 11), resvar = 12, grids = mygrids, lr = c(0.005), ZI = TRUE, savegbm = FALSE, mapshape = coast)
gbm.auto
detach("package:gbm.auto", unload=TRUE)
devtools::install_github('SimonDedman/gbm.auto')
library("gbm.auto", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.3")
gbm.auto
detach("package:gbm.auto", unload=TRUE)
library("gbm.auto", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.3")
devtools::install_github('SimonDedman/gbm.auto')
detach("package:gbm.auto", unload=TRUE)
library("gbm.auto", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.3")
gbm.auto
devtools::install_github('SimonDedman/gbm.auto', force = TRUE)
gbm.auto
detach("package:beepr", unload=TRUE)
detach("package:devtools", unload=TRUE)
detach("package:dismo", unload=TRUE)
detach("package:gbm", unload=TRUE)
detach("package:gbm.auto", unload=TRUE)
detach("package:labeling", unload=TRUE)
detach("package:mapplots", unload=TRUE)
detach("package:raster", unload=TRUE)
detach("package:sp", unload=TRUE)
detach("package:datasets", unload=TRUE)
library("datasets", lib.loc="/usr/lib/R/library")
library("gbm.auto", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.3")
library("devtools", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.3")
document()
devtools::install_github('SimonDedman/gbm.auto', force = TRUE)
setwd("/home/simon/Dropbox/Galway/Project Sections/4b. Methods Paper BRT/Chuck's gbmauto attempts/")
grids <- read.csv("Abundance_Preds_only_Fall1.csv")
detach("package:gbm.auto", unload=TRUE)
library("gbm.auto", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.3")
png(filename = "ChuckRunSandbar.png", width = 4*1920, height = 4*1920, units = "px", pointsize = 4*48, bg = "white", res = NA, family = "", type = "cairo-png")
par(mar = c(3.2,3,1.3,0), las = 1, mgp = c(2.1,0.5,0),xpd = FALSE)
library("maptools", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.3")
chuckmap <- readShapePoly("./CroppedMap/Fall_Crop_Map")
png(filename = "ChuckRunSandbar.png", width = 4*1920, height = 4*1920, units = "px", pointsize = 4*48, bg = "white", res = NA, family = "", type = "cairo-png")
par(mar = c(3.2,3,1.3,0), las = 1, mgp = c(2.1,0.5,0),xpd = FALSE)
gbm.map(x = grids[,1], y = grids[,2], z = grids[,3], species = "Sandbar", legendtitle = "CPUE", shape = chuckmap)
dev.off()
document()
document()
library("devtools", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.3")
document()
document()
document()
document()
warnings()
document()
library(gbm.auto)
showNonASCIIfile("/home/simon/Dropbox/Galway/Analysis/R/gbm.auto/R/gbm.valuemap.R")
library("tools", lib.loc="/usr/lib/R/library")
showNonASCIIfile("/home/simon/Dropbox/Galway/Analysis/R/gbm.auto/R/gbm.valuemap.R")
document()
library(gbm.auto)
document()
document()
document()
document()
document()
document()
document()
warnings()
library(gbm.auto)
document()
library(gbm.auto)
document()
document()
devtools::install_github('SimonDedman/gbm.auto', force = TRUE)
warnings()
gbm.auto
mysamples <- read.csv("/home/simon/Dropbox/Galway/Project Sections/3b. BRT plus Bpa Sam & Dave/Data/Samples_allRays_Env_F_E_NoGrain.csv", header = TRUE, row.names = NULL)
mygrids <- read.csv("/home/simon/Dropbox/Galway/Project Sections/2. Spatial subsets inc fishery data/Data/Maps/Juveniles/grids_Enviro_HansLPUE_MI&MMOlog_MIscallopVMS_MMOWhelk_MMOScal_Dist2Srvy_Preds_IS_NA_HansE_NoGrain.csv", header = TRUE)
# set directory, with fishing E as an expvar
setwd("/home/simon/Dropbox/Galway/Project Sections/3b. BRT plus Bpa Sam & Dave/Analysis/Model Outputs/With E")
# load mapplots coast and set as shape
library(mapplots)
data(coast)
shape = coast
gbm.auto(expvar = c(4:7, 9, 11), resvar = 12, grids = mygrids, lr = c(0.005), ZI = TRUE, savegbm = FALSE, mapshape = coast)
gbm.auto(expvar = c(4:7, 9, 11), resvar = 12, grids = mygrids, samples = mysamples, lr = c(0.005), ZI = TRUE, savegbm = FALSE, mapshape = coast)
document()
library("gbm.auto", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.3")
setwd("/home/simon/Dropbox/Galway/Project Sections/4b. Methods Paper BRT/Chuck's gbmauto attempts/PamlicoSoundSamples.csv")
setwd("/home/simon/Dropbox/Galway/Project Sections/4b. Methods Paper BRT/Chuck's gbmauto attempts")
sharks<-read.csv("PamlicoSoundSharks.csv", header=TRUE)
grids<-read.csv("PamlicoSoundSamples.csv", header=TRUE, row.names=NULL)
library("maptools", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.3")
chuckmap <- readShapeSpatial("./CroppedMap/Fall_Crop_Map")
gbm.auto(expvar = c(8:13), resvar = 18, grids = grids, samples = sharks, lr = 0.001, bf = 0.75, tc = 2, gridslat=3, gridslon=4, map=TRUE, pngtype="cairo-png", varint=TRUE, simp=TRUE, max.trees=28000, mapshape = chuckmap)
setwd("./SmoothDogfish")
png(filename = "SmoothDogFish.png", width = 4*1920, height = 4*1920, units = "px", pointsize = 4*48, bg = "white", res = NA, family = "", type = "cairo-png")
par(mar = c(3.2,3,1.3,0), las = 1, mgp = c(2.1,0.5,0),xpd = FALSE)
preds <- read.csv("Abundance_Preds_Only.csv")
preds <- read.csv("Abundance_Preds_only.csv")
gbm.map(x = grids[,4],
y = grids[,3],
z = preds[,predabund],
species = "SmoothDogfish",
legendtitle = "CPUE")
gbm.map(x = grids[,3],
y = grids[,4],
z = preds[,predabund],
species = "SmoothDogfish",
legendtitle = "CPUE")
gbm.map(x = preds[,2],
y = preds[,1],
z = preds[,predabund],
species = "SmoothDogfish",
legendtitle = "CPUE")
traceback()
require(mapplots)
library(mapplots)
bydist <- rep(NA, length(preds[,2]))
cells <- data.frame(LONGITUDE = preds[,2], bydist = bydist, stringsAsFactors = FALSE)
cells[2:(length(preds[,2]) - 1),"bydist"] <-
ifelse(round(cells[2:(length(preds[,2]) - 1),1] - cells[1:(length(preds[,2]) - 2),1], digits = 5)
==
round(cells[3:length(preds[,2]),1] - cells[2:(length(preds[,2]) - 1),1], digits = 5),
round(cells[2:(length(preds[,2]) - 1),1] - cells[1:(length(preds[,2]) - 2),1], digits = 5), NA)
byx <- mean(cells$bydist, na.rm = TRUE)
cells[2:(length(preds[,1]) - 1),"bydist"] <-
ifelse(round(cells[2:(length(preds[,1]) - 1),1] - cells[1:(length(preds[,1]) - 2),1], digits = 5)
==
round(cells[3:length(preds[,1]),1] - cells[2:(length(preds[,1]) - 1),1], digits = 5),
round(cells[2:(length(preds[,1]) - 1),1] - cells[1:(length(preds[,1]) - 2),1], digits = 5), NA)
byx <- mean(cells$bydist, na.rm = TRUE)
View(cells)
setwd("/home/simon/Dropbox/Galway/Project Sections/4b. Methods Paper BRT/Chuck's gbmauto attempts")
sharks<-read.csv("PamlicoSoundSharks.csv", header=TRUE)
grids<-read.csv("FallGrid.csv", header=TRUE, row.names=NULL)
library("maptools", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.3")
chuckmap <- readShapeSpatial("./CroppedMap/Fall_Crop_Map")
gbm.auto(expvar = c(8:13), resvar = 18, grids = grids, samples = sharks, lr = 0.001, bf = 0.75, tc = 2, gridslat=4, gridslon=3, map=TRUE, pngtype="cairo-png", varint=TRUE, simp=TRUE, max.trees=28000, mapshape = chuckmap)
legend.grid
install.packages("R.utils")
library("devtools", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.3")
document()
library("devtools", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.3")
document()
library("devtools", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.3")
devtools::install_github('SimonDedman/gbm.auto', force = TRUE)
library("gbm.auto", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.3")
setwd("/home/simon/Dropbox/Galway/Project Sections/4b. Methods Paper BRT/Chuck's gbmauto attempts")
sharks<-read.csv("PamlicoSoundSharks.csv", header=TRUE)
grids<-read.csv("FallGrid.csv", header=TRUE, row.names=NULL)
library("maptools", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.3")
chuckmap <- readShapeSpatial("./CroppedMap/Fall_Crop_Map")
gbm.auto(expvar = c(8:13), resvar = 18, grids = grids, samples = sharks, lr = 0.001, bf = 0.75, tc = 2, gridslat=3, gridslon=4, map=TRUE, pngtype="cairo-png", varint=TRUE, simp=TRUE, max.trees=28000, mapshape = chuckmap)
gbm.auto(expvar = c(8:13), resvar = 18, grids = grids, samples = sharks, lr = 0.001, bf = 0.75, tc = 2, gridslat=3, gridslon=4, map=TRUE, pngtype="cairo-png", varint=FALSE, simp=FALSE, max.trees=28000, mapshape = chuckmap)
grids <- read.csv("./SmoothDogfish/Abundance_Preds_only.csv")
png(filename = "ChuckRunSandbar.png", width = 4*1920, height = 4*1920, units = "px", pointsize = 4*48, bg = "white", res = NA, family = "", type = "cairo-png")
par(mar = c(3.2,3,1.3,0), las = 1, mgp = c(2.1,0.5,0),xpd = FALSE)
gbm.map(x = grids[,1], y = grids[,2], z = grids[,3], species = "SmothDogfish", legendtitle = "CPUE", shape = chuckmap)
dev.off()
grids<-read.csv("FallGrid.csv", header=TRUE, row.names=NULL)
getwd()
gbm.auto(expvar = c(8:13), resvar = 18, grids = grids, samples = sharks, lr = 0.001, bf = 0.75, tc = 2, gridslat=4, gridslon=3, map=TRUE, pngtype="cairo-png", varint=FALSE, simp=FALSE, max.trees=28000, mapshape = chuckmap)
shape <- chuckmap
png(filename = "./SmoothDogfish/SmoothDogManual.png", width = 4*1920, height = 4*1920, units = "px", pointsize = 4*48, bg = "white", res = NA, family = "", type = "cairo-png")
par(mar = c(3.2,3,1.3,0), las = 1, mgp = c(2.1,0.5,0),xpd = FALSE)
preds <- read.csv("./SmoothDogfish/Abundance_Preds_only.csv")
gbm.map(x = grids[,3], y = grids[,4], z = preds[,3], species = "SmoothDogfish", legendtitle = "CPUE", shape = chuckmap)
dev.off()
install.packages("shapefiles")
library("shapefiles", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.3")
chuckmap <- read.shapefile("./CroppedMap/Fall_Crop_Map")
png(filename = "./SmoothDogfish/SmoothDogManual2.png", width = 4*1920, height = 4*1920, units = "px", pointsize = 4*48, bg = "white", res = NA, family = "", type = "cairo-png")
par(mar = c(3.2,3,1.3,0), las = 1, mgp = c(2.1,0.5,0),xpd = FALSE)
gbm.map(x = grids[,3], y = grids[,4], z = preds[,3], species = "SmoothDogfish", legendtitle = "CPUE", shape = chuckmap)
dev.off()
document()
