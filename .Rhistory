gbm.auto(samples = mysamples, expvar = c(4:9), resvar = 11,
tc = list(c(2,3),2),
lr = list(0.01, c(0.01, 0.005)),
bf = list(0.5, 0.7),
mapshape = Crop_Map, simp = TRUE, varint = FALSE, map = FALSE,
BnW = FALSE, RSB = F, linesfiles = FALSE, savegbm = F)
source('~/Dropbox/Galway/Analysis/R/gbm.auto/R/gbm.auto.R')
gbm.auto(samples = mysamples, expvar = c(4:9), resvar = 11,
tc = list(c(2,3),2),
lr = list(0.01, c(0.01, 0.005)),
bf = list(0.5, 0.7),
mapshape = Crop_Map, simp = TRUE, varint = FALSE, map = FALSE,
BnW = FALSE, RSB = F, linesfiles = FALSE, savegbm = F)
source('~/Dropbox/Galway/Analysis/R/gbm.auto/R/gbm.auto.R')
source('~/Dropbox/Galway/Analysis/R/gbm.auto/R/gbm.auto.R')
gbm.auto(samples = mysamples, expvar = c(4:9), resvar = 11,
tc = list(c(2,3),2),
lr = list(0.01, c(0.01, 0.005)),
bf = list(0.5, 0.7),
mapshape = Crop_Map, simp = TRUE, varint = FALSE, map = FALSE,
BnW = FALSE, RSB = F, linesfiles = FALSE, savegbm = F)
source('~/Dropbox/Galway/Analysis/R/gbm.auto/R/gbm.auto.R')
gbm.auto(samples = mysamples, expvar = c(4:9), resvar = 11,
tc = list(c(2,3),2),
lr = list(0.01, c(0.01, 0.005)),
bf = list(0.5, 0.7),
mapshape = Crop_Map, simp = TRUE, varint = FALSE, map = FALSE,
BnW = FALSE, RSB = F, linesfiles = FALSE, savegbm = F)
source('~/Dropbox/Galway/Analysis/R/gbm.auto/R/gbm.auto.R')
source('~/Dropbox/Galway/Analysis/R/gbm.auto/R/gbm.auto.R')
source('~/Dropbox/Galway/Analysis/R/gbm.auto/R/gbm.auto.R')
gbm.auto(samples = mysamples, expvar = c(4:9), resvar = 11,
tc = list(c(2,3),2),
lr = list(0.01, c(0.01, 0.005)),
bf = list(0.5, 0.7),
mapshape = Crop_Map, simp = TRUE, varint = FALSE, map = FALSE,
BnW = FALSE, RSB = F, linesfiles = FALSE, savegbm = F)
gbm.auto(samples = mysamples, expvar = c(4:9), resvar = 11,
tc = list(c(2,3),2),
lr = list(0.01, c(0.01, 0.005)),
bf = list(0.5, 0.7),
mapshape = Crop_Map, simp = F, varint = FALSE, map = FALSE,
BnW = FALSE, RSB = F, linesfiles = FALSE, savegbm = F)
gbm.auto(samples = mysamples, expvar = c(4:9), resvar = 11,
tc = list(c(2,3),2),
lr = list(0.01, c(0.01, 0.005)),
bf = list(0.5, 0.7),
mapshape = Crop_Map)
gbm.auto(samples = mysamples, expvar = c(4:9), resvar = 11,
tc = list(c(2,3),2),
lr = list(0.01, c(0.01, 0.005)),
bf = list(0.5, 0.7),
mapshape = Crop_Map)
library("gbm.auto")
mygrids <- gbm.auto::grids # load grids
mysamples <- gbm.auto::samples # load samples
setwd("/home/simon/Desktop/gbm temp/sepParamTestbench/")
source('~/Dropbox/Galway/Analysis/R/gbm.auto/R/gbm.utils.R')
library("shapefiles")
Crop_Map <- read.shapefile("/home/simon/Desktop/gbm temp/CroppedMap/Crop_Map")
source('~/Dropbox/Galway/Analysis/R/gbm.auto/R/gbm.auto.R')
gbm.auto(samples = mysamples, grids = mygrids, expvar = c(4:9), resvar = 11,
tc = list(c(2,3),2),
lr = 0.01,
bf = 0.5,
mapshape = Crop_Map, simp = FALSE, varint = FALSE, map = FALSE,
BnW = FALSE, RSB = F, linesfiles = FALSE, savegbm = F)
gbm.auto(samples = mysamples, grids = mygrids, expvar = c(4:9), resvar = 11,
tc = 2,
lr = 0.01,
bf = 0.5,
mapshape = Crop_Map)
gbm.auto(samples = mysamples, grids = mygrids, expvar = c(4:9), resvar = 11,
tc = c(2,3),
lr = c(0.01,0.009),
bf = c(0.5,0.6),
mapshape = Crop_Map)
gbm.auto(samples = mysamples, grids = mygrids, expvar = c(4:9), resvar = 11,
tc = list(c(2,3),2),
lr = 0.01,
bf = 0.5,
mapshape = Crop_Map)
gbm.auto(samples = mysamples, grids = mygrids, expvar = c(4:9), resvar = 11,
tc = 2,
lr = list(0.01, c(0.01, 0.005)),
bf = 0.5,
mapshape = Crop_Map)
gbm.auto(samples = mysamples, grids = mygrids, expvar = c(4:9), resvar = 11,
tc = 2,
lr = 0.01,
bf = list(0.5, 0.7),
mapshape = Crop_Map)
gbm.auto(samples = mysamples, grids = mygrids, expvar = c(4:9), resvar = 11,
tc = list(c(2,3),2),
lr = list(0.01, c(0.01, 0.005)),
bf = 0.5,
mapshape = Crop_Map)
gbm.auto(samples = mysamples, grids = mygrids, expvar = c(4:9), resvar = 11,
tc = 2,
lr = list(0.01, c(0.01, 0.005)),
bf = list(0.5, 0.7),
mapshape = Crop_Map)
gbm.auto(samples = mysamples, grids = mygrids, expvar = c(4:9), resvar = 11,
tc = list(c(2,3),2),
lr = 0.01,
bf = list(0.5, 0.7),
mapshape = Crop_Map)
gbm.auto(samples = mysamples, grids = mygrids, expvar = c(4:9), resvar = 11,
tc = list(c(2,3),2),
lr = list(0.01, c(0.01, 0.005)),
bf = list(0.5, 0.7),
mapshape = Crop_Map)
gbm.auto(samples = mysamples, grids = mygrids, expvar = c(4:9), resvar = 11,
tc = 2,
lr = 0.01,
bf = list(c(0.5, 0.7),0.5),
mapshape = Crop_Map)
gbm.auto(samples = mysamples, expvar = c(4:9), resvar = 11,
tc = list(2,c(2,3)),
lr = list(c(0.01, 0.02), 0.005),
bf = list(0.5, c(0.5, 0.7)),
mapshape = Crop_Map)
gbm.auto(samples = mysamples, expvar = c(4:9), resvar = 11,
tc = list(2,c(2,3)),
lr = 0.01
bf = list(0.5, c(0.5, 0.7)),
mapshape = Crop_Map)
gbm.auto(samples = mysamples, expvar = c(4:9), resvar = 11,
tc = list(2,c(2,3)),
lr = 0.01,
bf = list(0.5, c(0.5, 0.7)),
mapshape = Crop_Map)
gbm.auto(samples = mysamples, expvar = c(4:9), resvar = 11,
tc = 2,
lr = list(c(0.01, 0.02), 0.005),
bf = list(0.5, c(0.5, 0.7)),
mapshape = Crop_Map)
gbm.auto(samples = mysamples, expvar = c(4:9), resvar = 11,
tc = list(2,c(2,3)),
lr = list(c(0.01, 0.02), 0.005),
bf = 0.5,
mapshape = Crop_Map)
gbm.auto(samples = mysamples, grids = mygrids, expvar = c(4:9), resvar = 11,
tc = list(c(2,3),2),
lr = list(0.01, c(0.01, 0.005)),
bf = list(0.5, 0.7),
mapshape = Crop_Map)
gbm.auto(samples = mysamples, grids = mygrids, expvar = c(4:9), resvar = 11,
tc = list(c(2,3),2),
lr = list(0.01, c(0.01, 0.005)),
bf = 0.5,
mapshape = Crop_Map)
gbm.auto(samples = mysamples, grids = mygrids,  = c(4:9), resvar = 11,
tc = list(2,c(2,3)),
lr = list(c(0.01, 0.02), 0.005),
bf = list(0.5, c(0.5, 0.7)),
mapshape = Crop_Map)
gbm.auto(samples = mysamples, grids = mygrids, expvar = c(4:9), resvar = 11,
tc = list(2,c(2,3)),
lr = list(c(0.01, 0.02), 0.005),
bf = list(0.5, c(0.5, 0.7)),
mapshape = Crop_Map)
getwd()
dir.create("./2")
setwd("./2")
gbm.auto(samples = mysamples, grids = mygrids, expvar = c(4:9), resvar = 11,
tc = list(2,c(2,3)),
lr = 0.01,
bf = list(0.5, c(0.5, 0.7)),
mapshape = Crop_Map)
# FAILED. BF & TC fail. BF & LR?
dir.create("./3")
setwd("./3")
gbm.auto(samples = mysamples, grids = mygrids, expvar = c(4:9), resvar = 11,
tc = 2,
lr = list(c(0.01, 0.02), 0.005),
bf = list(0.5, c(0.5, 0.7)),
mapshape = Crop_Map)
# FAILED. So is it just BF? Non-BF-multilist worked...
dir.create("./4")
setwd("./4")
gbm.auto(samples = mysamples, grids = mygrids, expvar = c(4:9), resvar = 11,
tc = list(2,c(2,3)),
lr = list(c(0.01, 0.02), 0.005),
bf = 0.5,
mapshape = Crop_Map)
library("devtools", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.3")
document()
library("gbm.auto")
mygrids <- gbm.auto::grids # load grids
mysamples <- gbm.auto::samples # load samples
setwd("/home/simon/Desktop/gbm temp/sepParamTestbench/")
library("shapefiles")
Crop_Map <- read.shapefile("/home/simon/Desktop/gbm temp/CroppedMap/Crop_Map")
gbm.auto(samples = mysamples, grids = mygrids, expvar = c(4:9), resvar = 11,
tc = list(2,c(2,3)),
lr = list(c(0.01, 0.02), 0.005),
bf = 0.5,
mapshape = Crop_Map, simp = F)
gbm.auto(samples = mysamples, grids = mygrids, expvar = c(4:9), resvar = 11,
tc = list(2,c(2,3)),
lr = list(c(0.01, 0.02), 0.005),
bf = 0.5,
mapshape = Crop_Map, simp = T)
document()
library("devtools", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.3")
document()
library("devtools", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.3")
document()
document()
document()
library("devtools", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.3")
document()
install_github("SimonDedman/gbm.auto")
mygrids <- gbm.auto::grids # load grids
mysamples <- gbm.auto::samples # load samples
setwd("/home/simon/Desktop/gbm temp/variance/")
library("shapefiles")
Crop_Map <- read.shapefile("/home/simon/Desktop/gbm temp/CroppedMap/Crop_Map")
getwd()
write.csv(mysamples[1:10,1:10], file = "test.csv")
source('~/.active-rstudio-document')
gbm.loop2(4)
source('~/.active-rstudio-document')
getwd()
gbm.loop2(4)
getwd()
2var.df <- mygrids[,1:2]
avar.df <- mygrids[,1:2]
rand1 <- runif(100)
rand2 <- runif(100)
rand3 <- runif(100)
rand4 <- runif(100)
rand5 <- runif(100)
randvar <- cbind(rand1, rand2, rand3, rand4, rand5)
randvar
varcol1 <- var(randvar[1,])
varcol2 <- var(randvar[1:100,])
varcol3 <- rep(NA,100)
varcol3[1:100] <- var(randvar[1:100,])
randvar[1,]
var(randvar[1,])
var(randvar[1:100,])
varcol2 <- as.vector(var(randvar[1:100,]))
varcol3 <- rep(NA,100)
varcol4 <- cbind(varcol3, varcol3, varcol3)
View(varcol4)
for (i in 1:100){
varcol4[i,3] <- var(randvar[i,])
}
View(varcol4)
loops = 5
2 + loops
(3:(2 + loops))
library("gbm.auto")
mygrids <- gbm.auto::grids # load grids
mysamples <- gbm.auto::samples # load samples
getwd()
library("shapefiles")
source('~/Dropbox/Galway/Analysis/R/gbm.auto/R/gbm.loop.R')
source('~/Dropbox/Galway/Analysis/R/gbm.auto/R/gbm.loop.R')
source('~/Dropbox/Galway/Analysis/R/gbm.auto/R/gbm.loop.R')
gbm.loop(loops = 3,
savecsv = T, #unnecessary
samples = mysamples,
grids = mygrids,
expvar = c(4:10),
resvar = 11,
simp = FALSE,
RSB = F)
source('~/Dropbox/Galway/Analysis/R/gbm.auto/R/gbm.auto.R')
install_github("SimonDedman/gbm.auto")
gbm.loop(loops = 3,
savecsv = T, #unnecessary
samples = mysamples,
grids = mygrids,
expvar = c(4:10),
resvar = 11,
simp = FALSE,
RSB = F)
source('~/Dropbox/Galway/Analysis/R/gbm.auto/R/gbm.utils.R')
gbm.loop(loops = 3,
savecsv = T, #unnecessary
samples = mysamples,
grids = mygrids,
expvar = c(4:10),
resvar = 11,
simp = FALSE,
RSB = F)
getwd()
setwd("../../../../")
getwd()
source('~/Dropbox/Galway/Analysis/R/gbm.auto/R/gbm.loop.R')
gbm.loop(loops = 3,
savecsv = T, #unnecessary
samples = mysamples,
grids = mygrids,
expvar = c(4:10),
resvar = 11,
simp = FALSE,
RSB = F)
colnames(mysamples[,11])
colnames(mysamples[11])
source('~/Dropbox/Galway/Analysis/R/gbm.auto/R/gbm.loop.R')
getwd()
setwd("/home/simon/Desktop/gbm temp/variance/")
gbm.loop(loops = 3,
savecsv = T, #unnecessary
samples = mysamples,
grids = mygrids,
expvar = c(4:10),
resvar = 11,
simp = FALSE,
RSB = F)
traceback()
source('~/Dropbox/Galway/Analysis/R/gbm.auto/R/gbm.loop.R')
var(1:2)
getwd()
gbmlooptest <- gbm.loop(loops = 2,
savecsv = T, #unnecessary
samples = mysamples,
grids = mygrids,
expvar = c(4:10),
resvar = 11,
simp = FALSE,
RSB = F)
var(var.df[1, (3:(2 + loops))])
var(var.df[1, (3:(2 + 2))])
var.df[1, (3:(2 + 2))]
var(as.vector(var.df[1, (3:(2 + 2))])
var.df[1, (3:(2 + 2))]
as.vector(var.df[1, (3:(2 + 2))])
var(1:4)
install.packages("matrixStats")
var.df[,5] < apply(var.df[,3:4], MARGIN = 1, var)
var.df[,5] <- apply(var.df[,3:4], MARGIN = 1, var)
var(var.df[,3:4])
var(var.df[,3], var.df[,4])
var(var.df[1,3], var.df[1,4])
c(var.df[1,3], var.df[1,4])
var(var.df[1,3], var.df[1,4])
var(0.0298, 0.0589)
var(1,4)
var(c(1,4)
var(c(1,4))
var(c(0.0298, 0.0589))
var.df[,Variances]
var.df[,"Variances"]
var.df[,"TITS"] <- apply(var.df[,3:4], MARGIN = 1, var)
source('~/Dropbox/Galway/Analysis/R/gbm.auto/R/gbm.loop.R')
library("gbm.auto")
mygrids <- gbm.auto::grids # load grids
mysamples <- gbm.auto::samples # load samples
setwd("/home/simon/Desktop/gbm temp/variance/")
source('~/Dropbox/Galway/Analysis/R/gbm.auto/R/gbm.utils.R')
gbmlooptest <- gbm.loop(loops = 2,
savecsv = T, #unnecessary
samples = mysamples,
grids = mygrids,
expvar = c(4:10),
resvar = 11,
simp = FALSE,
RSB = F)
source('~/Dropbox/Galway/Analysis/R/gbm.auto/R/gbm.loop.R')
gbmlooptest <- gbm.loop(loops = 2,
savecsv = T, #unnecessary
samples = mysamples,
grids = mygrids,
expvar = c(4:10),
resvar = 11,
simp = FALSE,
RSB = F)
traceback()
colnames(mygrids[2+1])
paste("Loop_", 1, sep = "")
source('~/Dropbox/Galway/Analysis/R/gbm.auto/R/gbm.loop.R')
gbmlooptest <- gbm.loop(loops = 2,
savecsv = T, #unnecessary
samples = mysamples,
grids = mygrids,
expvar = c(4:10),
resvar = 11,
simp = FALSE,
RSB = F)
traceback()
mysamples[,c(1,2,"Depth")]
mysamples[,c(1,2,Depth)]
mysamples[,"Depth"]
mysamples[,c("Depth")]
mysamples[,c(1, "Depth")]
mysamples[,c(1,2,3)]
mysamples[,c(1,2,(3+1))]
head(mysamples[,c(1,2,(3+1))])
source('~/Dropbox/Galway/Analysis/R/gbm.auto/R/gbm.loop.R')
gbmlooptest <- gbm.loop(loops = 2,
savecsv = T, #unnecessary
samples = mysamples,
grids = mygrids,
expvar = c(4:10),
resvar = 11,
simp = FALSE,
RSB = F)
source('~/Dropbox/Galway/Analysis/R/gbm.auto/R/gbm.loop.R')
source('~/Dropbox/Galway/Analysis/R/gbm.auto/R/gbm.loop.R')
tmpname <- paste("loop_", 1, sep= "")
source('~/Dropbox/Galway/Analysis/R/gbm.auto/R/gbm.loop.R')
getwd()
gbmlooptest <- gbm.loop(loops = 2,
savecsv = T, #unnecessary
samples = mysamples,
grids = mygrids,
expvar = c(4:10),
resvar = 11,
simp = FALSE,
RSB = F)
source('~/Dropbox/Galway/Analysis/R/gbm.auto/R/gbm.loop.R')
gbmlooptest <- gbm.loop(loops = 2,
savecsv = T, #unnecessary
samples = mysamples,
grids = mygrids,
expvar = c(4:10),
resvar = 11,
simp = FALSE,
RSB = F)
source('~/Dropbox/Galway/Analysis/R/gbm.auto/R/gbm.loop.R')
getwd()
document()
library("devtools", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.3")
document()
testlist <- list(c(0.001),0.000002)
testlist
testlist <- list(0.001,0.000002)
testlist <- list(c(0.001, 0.1),0.000002)
library("gbm.auto")
mygrids <- gbm.auto::grids # load grids
mysamples <- gbm.auto::samples # load samples
setwd("/home/simon/Desktop/gbm temp/variance/")
source('~/Dropbox/Galway/Analysis/R/gbm.auto/R/gbm.utils.R')
setwd("/home/simon/Dropbox/Galway/Project Sections/4b. Methods Paper BRT/Chuck's gbmauto attempts/")
grids <- read.csv("Fallgrid.csv")
grids <- read.csv("Fallgrids.csv")
grids <- read.csv("FallGrid.csv")
gridslat=summergrid[,3]
gridslon=summergrid[,4]
xbounds <- range(gridslon, na.rm = TRUE)
ybounds <- range(gridslat, na.rm = TRUE)
Pambounds <- c(xbounds, bounds)
gridslat=grids[,3]
gridslon=summergrid[,4]
xbounds <- range(gridslon, na.rm = TRUE)
ybounds <- range(gridslat, na.rm = TRUE)
Pambounds <- c(xbounds, bounds)
gridslat=grids[,3]
gridslon=grids[,4]
xbounds <- range(gridslon, na.rm = TRUE)
ybounds <- range(gridslat, na.rm = TRUE)
Pambounds <- c(xbounds, bounds)
Pambounds <- c(xbounds, ybounds)
MappyMcMapface <- gbm.basemap(bounds = Pambounds, getzip = "GSHHS_shp", savename = "SummerMap", res = "f")
library("gbm.auto", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.3")
library("devtools", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.3")
install_github("SimonDedman/gbm.auto")
library("gbm.auto", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.3")
library("gbm.auto", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.3")
library("gbm.auto", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.3")
library("stringi", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.3")
install.packages("stringi")
install.packages(c("curl", "evaluate", "R6", "rmarkdown"))
library("gbm.auto", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.3")
library("stringi", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.3")
detach("package:gbm.auto", unload=TRUE)
library("gbm.auto", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.3")
install.packages("rgdal")
library("rgdal", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.3")
?remove.packages("rgdal")
remove.packages("rgdal")
q()
library("gbm.auto", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.3")
detach("package:gbm.auto", unload=TRUE)
install.packages("rgdal")
library("gbm.auto", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.3")
setwd("/home/simon/Dropbox/Galway/Project Sections/4b. Methods Paper BRT/Chuck's gbmauto attempts/")
MappyMcMapface <- gbm.basemap(bounds = Pambounds, getzip = "GSHHS_shp", savename = "SummerMap", res = "f")
gridslat = grids[,4]
gridslon = grids[,3]
xbounds <- range(gridslon, na.rm = TRUE)
ybounds <- range(gridslat, na.rm = TRUE)
Pambounds <- c(xbounds, ybounds)
MappyMcMapface <- gbm.basemap(bounds = Pambounds, getzip = "GSHHS_shp", savename = "SummerMap", res = "f")
getwd()
setwd("../")
getwd()
MappyMcMapface <- gbm.basemap(bounds = Pambounds, getzip = "GSHHS_shp", savename = "SummerMap", res = "f")
sharks <- read.csv("PamlicoSoundSamples.csv")
sharks <- read.csv("PamlicoSoundSharks.csv")
sharks[,18]
names(sharks[,18])
names(sharks[18])
gbm.auto(expvar = c(8:13),
resvar = 18,
grids = grids,
samples = sharks,
lr = list(c(0.001),0.0005),
gridslat = 4,
gridslon = 3,
mapshape = MappyMcMapface,
varint = FALSE,
simp = FALSE,
max.trees = 35000)
source('~/Dropbox/Galway/Analysis/R/gbm.auto/R/gbm.auto.R')
library("devtools", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.3")
document()
